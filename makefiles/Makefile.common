##################################################
#              Common makefile                   #
##################################################

#------------------- compiler --------------------------
ifneq ($(USE_CLANG),)
CC  = clang
CXX = clang++
LD  = clang++
endif
#-------------------------------------------------------

#------------------- local -----------------------------
# If no library name is set up manually, it is provided automatically.
ifeq ($(LIBNAME),)
LIBNAME := $(shell (cd .. && pwd))
endif
# If no version is set up manually, it is provided automatically.
ifeq ($(VERSION),)
VERSION = 0.1
endif

LOCAL  = $(shell pwd)
SRCDIR = src
INCDIR = include
OUTDIR = out
BINDIR = bin
LIBDIR = lib
DOCDIR = doc
SPTDIR = scripts

HeadSuf = hh
SrcSuf  = cxx
ObjSuf  = o
ExeSuf  =
DllSuf  = so
SptSuf  = sh
#-------------------------------------------------------

#------------------- defs ------------------------------
INCLUDES += -I$(LOCAL)/$(INCDIR)
#-------------------------------------------------------

#------- alias -----------------------------------------
HEADERS = $(patsubst %,$(INCDIR)/%.$(HeadSuf),$(FILES))
SOURCES = $(patsubst %,$(SRCDIR)/%.$(SrcSuf),$(FILES))
OBJECTS = $(patsubst %,$(OUTDIR)/%.$(ObjSuf),$(FILES))

PROGSRCS = $(patsubst %,$(SRCDIR)/%.$(SrcSuf),$(PROGRAMS))
PROGOBJS = $(patsubst %,$(OUTDIR)/%.$(ObjSuf),$(PROGRAMS))
PROGBINS = $(patsubst %,$(BINDIR)/%,$(PROGRAMS))
#-------------------------------------------------------

#------------------- library ---------------------------
LIBSO    = $(LIBDIR)/lib$(LIBNAME).$(DllSuf)
#-------------------------------------------------------

#------------------------- flags -----------------------
# -pthread
CXXFLAGS = -O2 -Wall -fPIC
CCFLAGS  = -O2 -Wall -fPIC
LDFLAGS  = 
SOFLAGS  = -fPIC -shared
#-------------------------------------------------------

#------------------- archetecture ----------------------
ifneq ($(IS_64BIT),)
CXXFLAGS += -m64
CCFLAGS  += -m64
ifneq ($(USE_CLANG),)
LDFLAGS  += -m64
else
LDFLAGS  += -melf_x86_64
endif
endif
#-------------------------------------------------------

#------------------- CURL ------------------------------
#ifneq ($(HAS_LIBCURL),)
INCLUDES += -I$(shell curl-config --prefix)/include
CXXFLAGS += $(shell curl-config --cflags)
CCFLAGS  += $(shell curl-config --cflags)
LIBS     += $(shell curl-config --libs)
#endif
#-------------------------------------------------------

#------- targets ---------------------------------------
.PHONY : clean dirs readme doc bundle help helpmsg show

all : helpmsg dirs objs lib progs

objs : $(OBJECTS)

lib : $(LIBSO)

progs : proginfo $(PROGOBJS) $(PROGBINS)
#-------------------------------------------------------

#-------- specific rules -------------------------------
# library sources
$(OUTDIR)/%.$(ObjSuf): $(SRCDIR)/%.$(SrcSuf) $(INCDIR)/%.$(HeadSuf)
	$(COMPILE.cc) $(INCLUDES) -o $@ $<

# shared object library
$(LIBSO): $(OBJECTS)
	@echo "*** Generating shared object library :" $@ 
	$(LD) $(SOFLAGS) $^ $(LDFLAGS) $(LIBS) -o $@

# programs
proginfo: 
	@echo "*** Compiling binary executables"
$(OUTDIR)/%.$(ObjSuf): $(SRCDIR)/%.$(SrcSuf)
	$(COMPILE.cc) $(INCLUDES) -o $@ $<
$(BINDIR)/%: $(OUTDIR)/%.$(ObjSuf) $(LOCAL)/$(LIBSO)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS) -L$(LOCAL)/$(LIBDIR) -l$(LIBNAME)
#-------------------------------------------------------


#------- phony targets ---------------------------------
include makefiles/Makefile.dirs
include makefiles/Makefile.install
include makefiles/Makefile.readme
include makefiles/Makefile.doc
include makefiles/Makefile.bundle
include makefiles/Makefile.clean
include makefiles/Makefile.help
include makefiles/Makefile.show
#-------------------------------------------------------
